import React, { useState, useEffect } from 'react';
import { api } from '../../utils/api';
import Header from '../Header';
import Logo from '../../images/profile.png';
import { theme } from '../../styles/theme';

export default function AdminReports() {
  const [analytics, setAnalytics] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    fetchAnalytics();
  }, []);

  const fetchAnalytics = async () => {
    try {
      const response = await api.get('/admin-dashboard/');
      setAnalytics(response.data.analytics);
      setLoading(false);
    } catch (err) {
      console.error('Error fetching analytics:', err);
      setError('Failed to load analytics data');
      setLoading(false);
    }
  };

  if (loading) return <div className="loading">Loading analytics...</div>;
  if (error) return <div className="error">{error}</div>;
  if (!analytics) return <div>No analytics data available</div>;

  return (
    <>
      <Header name="Analytics & Reports" logo={Logo} />
      <div className="reports-container">
        <div className="analytics-grid">
          {/* Course Questions Distribution */}
          <div className="analytics-card">
            <h3>Questions by Course</h3>
            <div className="chart-container">
              {analytics.questions_by_course.map((item, index) => (
                <div key={index} className="bar-chart-item">
                  <span className="bar-label">{item.course_name}</span>
                  <div 
                    className="bar" 
                    style={{ width: `${Math.min((item.question_count / 100) * 100, 100)}%` }}
                  >
                    {item.question_count}
                  </div>
                </div>
              ))}
            </div>
          </div>

          {/* Papers Generated */}
          <div className="analytics-card">
            <h3>Papers Generated by Course</h3>
            <div className="chart-container">
              {analytics.papers_generated.map((item, index) => (
                <div key={index} className="bar-chart-item">
                  <span className="bar-label">{item.course_code}</span>
                  <div 
                    className="bar" 
                    style={{ 
                      width: `${Math.min((item.count / 50) * 100, 100)}%`,
                      background: theme.colors.secondary.main 
                    }}
                  >
                    {item.count}
                  </div>
                </div>
              ))}
            </div>
          </div>

          {/* Faculty Course Distribution */}
          <div className="analytics-card">
            <h3>Faculty Course Distribution</h3>
            <div className="chart-container">
              {analytics.faculty_course_distribution.map((item, index) => (
                <div key={index} className="bar-chart-item">
                  <span className="bar-label">{item.name}</span>
                  <div 
                    className="bar" 
                    style={{ 
                      width: `${Math.min((item.course_count / 10) * 100, 100)}%`,
                      background: theme.colors.success.main 
                    }}
                  >
                    {item.course_count}
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>

      <style>{`
        .reports-container {
          padding: 2rem;
          max-width: 1200px;
          margin: 0 auto;
        }

        .analytics-grid {
          display: grid;
          grid-template-columns: 1fr;
          gap: 2rem;
        }

        .analytics-card {
          background: white;
          padding: 1.5rem;
          border-radius: ${theme.borderRadius.lg};
          box-shadow: ${theme.shadows.md};
        }

        .analytics-card h3 {
          margin: 0 0 1.5rem 0;
          color: ${theme.colors.text.primary};
          font-size: 1.2rem;
        }

        .chart-container {
          display: flex;
          flex-direction: column;
          gap: 1rem;
        }

        .bar-chart-item {
          display: flex;
          align-items: center;
          gap: 1rem;
        }

        .bar-label {
          min-width: 150px;
          font-size: 0.9rem;
          color: ${theme.colors.text.secondary};
        }

        .bar {
          height: 24px;
          background: ${theme.colors.primary.main};
          border-radius: ${theme.borderRadius.md};
          display: flex;
          align-items: center;
          padding: 0 0.75rem;
          color: white;
          font-size: 0.9rem;
          transition: width 0.3s ease;
          min-width: 40px;
        }

        .loading, .error {
          display: flex;
          justify-content: center;
          align-items: center;
          min-height: 400px;
          font-size: 1.1rem;
        }

        .error {
          color: ${theme.colors.error.main};
        }
      `}</style>
    </>
  );
} 